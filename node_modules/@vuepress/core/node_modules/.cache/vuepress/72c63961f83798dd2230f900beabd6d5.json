{"remainingRequest":"/home/shani/git/choreo-docs/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/shani/git/choreo-docs/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/shani/git/choreo-docs/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/shani/git/choreo-docs/node_modules/vuepress-theme-hope/components/Blog/BlogInfoList.vue?vue&type=template&id=08f6abe8&","dependencies":[{"path":"/home/shani/git/choreo-docs/node_modules/vuepress-theme-hope/components/Blog/BlogInfoList.vue","mtime":1613545283842},{"path":"/home/shani/git/choreo-docs/node_modules/cache-loader/dist/cjs.js","mtime":1613035873893},{"path":"/home/shani/git/choreo-docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1613035874787},{"path":"/home/shani/git/choreo-docs/node_modules/cache-loader/dist/cjs.js","mtime":1613035873893},{"path":"/home/shani/git/choreo-docs/node_modules/vue-loader/lib/index.js","mtime":1613035874787}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}